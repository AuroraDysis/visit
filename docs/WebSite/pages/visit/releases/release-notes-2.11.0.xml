<?xml version="1.0" encoding="UTF-8" ?>
<page>
  <title><![CDATA[Release Notes for VisIt 2.11]]></title>
  <owner><![CDATA[Page Owner Name]]></owner>
  <IM>LLNL-WEB-702158</IM>
  <lastchanged><![CDATA[August 31, 2016]]></lastchanged>
  <template><![CDATA[l2]]></template> 
  <content>
    <![CDATA[
	
<link rel="stylesheet" href="content/css/mods.css" media="screen" />	

<div class="row">	
<div class="span9">

<ul class="nav nav-tabs">
  	<li><a href="simulation/computer-codes/visit">VisIt Home</a></li>
	<li class="active"><a href="simulation/computer-codes/visit/downloads">Downloads</a></li>
  	<li><a href="simulation/computer-codes/visit/new">What's New</a></li>
  	<li><a href="simulation/computer-codes/visit/screenshots">Screen Shots</a></li>
	<li><a href="simulation/computer-codes/visit/gallery">Gallery</a></li>
	<li><a href="simulation/computer-codes/visit/faqs">FAQs</a></li>
</ul>


<p>Welcome to VisIt's release notes page. This page describes the important
enhancements and bug-fixes that were added to this release.</p>

<h2>General features added in version 2.11</h2>
<ul>
  <li>The <i>inferno</i>, <i>plasma</i>, <i>magma</i> and <i>viridis</i> color tables from matplotlib were added to VisIt. These color tables were developed to be perceptually uniform and more friendly to color blindness. For more details see <a href="https://bids.github.io/colormap/">https://bids.github.io/colormap/</a>. These  color tables are available under the <a href="https://creativecommons.org/about/cc0">CCO license</a>. Thanks to Akshay Subramaniam of Standford for providing the ct formated variants of these tables.</li>
  <li>The <i>viridis_light</i> color table, contributed by Robert Blake of LLNL, formally at John's Hopkins, was added to VisIt. Low saturation on the lower end of viridis can make it hard to use in 3D settings where lighting is applied. This variant helps address this.</li>
  <li>The re-architecting of the Parallel Integral Curve System (PICS), which formed the basis for functionality such as the Streamline and Poincare plots, has been completed. The changes began with the 2.9 release and provide a more flexible system with increased functionality. The most recent change in 2.11 is the removal of the Streamline plot. The same functionalty can now be achieved using the IntegralCurve operator and the Pseudocolor plot. The new system consists of four operators that feed their results into the Pseudocolor plot for display. The operators include the IntegralCurve, LCS (Lagrangian Coherent Structures), LimitCycle and Poincare operators. The Pseudocolor plot has been enhanced to be allow it to render lines in the same manner as the Streamline plot. For example, the Pseudocolor plot can now display lines as tubes and add spheres to the ends of the lines to show seed points. The Streamline Info query has been replaced with the Integral Curve Info query. For more information on using these operators, see the <a href="http://www.visitusers.org/index.php?title=Parallel_Integral_Curve_System_in_VisIt">Parallel Integral Curve System in VisIt</a> on the visitusers.org wiki.</li>
  <li>The qplot and visit_flow Python modules are now included as part of the standard VisIt distribution. The qplot module contains plotting routines based on Qt. The visit_flow module contains a dataflow infrastructure for compositing and annotating images. Together these two modules allow users to create sophisticated movies using VisIt. See the <a href="http://visitusers.org/index.php?title=Visit-tutorial-Advanced-movie-making">Advanced movie making</a> tutorial on the visitusers.org wiki for a detailed tutorial on using these modules to create a movie.</li>
</ul>

<h2>Advanced features added in version 2.11</h2>
<ul>
  <li>Libsim was changed so it does not require extra image broadcasts when rendering in batch mode.</li>
  <li>Libsim's Python bindings were regenerated so plotting and exporting functions such as <i>VisItAddPlot()</i> and <i>VisItExportDatabaseWithOptions()</i> are present.</li>
</ul>

<h2>Changes in GUI behavior for version 2.11</h2>
<ul>
  <li>The Streamline plot has been removed. The same functionality can now be achieved with the Integral Curve operator and the Pseudocolor plot.</li>
</ul>

<h2>File format reader changes in version 2.11</h2>
<ul>
  <li>A native MOAB (Mesh Object datABase) plugin was added thanks to Iulian R. Grindeanu and Vijay S. Mahadevan at ANL.</li>
  <li>Several HDF5-based plugins were missing some VisIt-specific file opening and closing logic to detect bad HDF5 usage. These were the ALS, AMR, PVLD, SXRIS and XGC plugins. In theory, users should see no difference in behavior.</li>
  <li>The Exodus plugin was enhanced to build against classic netCDF which does not require HDF5 or netCDF 4, which does require HDF5.</li>
  <li>The ITAPS plugin was removed. MOAB users should now have better capability with the new MOAB native plugin.</li>
  <li>The Mili library was updated to the new Open Source version of Mili (currently only available in VisIt's repository).</li>
  <li>Fixed a bug in the MFEM database plugin related to mesh construction.</li>
  <li>A couple of bugs related to reading particle data were corrected in the Cosmos++ database plugin.</li>
</ul>

<h2>Changes to VisIt's plots in version 2.11</h2>
<ul>
  <li>A bug was fixed with the Scatter plot, where VisIt would give an error if it generated any empty domains.</li>
  <li>The line plotting has been improved in the Pseudocolor plot. It is now possible to display lines as Lines, Tubes or Ribbons. It is also possible to display the end points of the lines as Spheres or Cones.</li>
</ul>

<h2>Changes to VisIt's picks and queries in version 2.11</h2>
<ul>
  <li>The GyRadius Query was added to VisIt, which returns the radius of gyration. By default it uses the centroid of the actual data. The user can overide this by specifying the coordinate to use in the <i>Centriod</i> setting. The query takes a density variable. The radius is calculated as sqrt(sum(Mi * sqr(Ri - Rcentroid)) / sum(Mi)), where Mi is the mass of cell i, Ri is the center of cell i and Rcentroid is the coordinate of the centroid.</li>
  <li>The Streamline Info query has been replaced with the Integral Curve Info query.</li>
</ul>

<h2>Other bugs fixed in version 2.11</h2>
<ul>
  <li>Viewer-based filename generation code used in the Libsim runtime library no longer queries the file system for permissions, which caused a massive slowdown when rendering images using Libsim at scale.</li>
  <li>Command recording does not escape back-slashes in Windows filenames, preventing recorded commands such as <i>OpenDatabase()</i> to fail on Windows.</li>
  <li>The Spreadsheet plot crashes when you turn on coloring and attempt to change the color table to something other than the default.</li>
  <li>Fixed the missing data issue in the SPH Resample Operator.</li>
  <li>The Average Value query now works for point data.</li>
</ul>

<h2>Configuration changes in version 2.11</h2>
<ul>
  <li>Host profiles have been removed for LLNL's coastal, eos, graph, hera and tempest systems.</li>
  <li>Host profiles have been removed for LANL's cielo system.</li>
</ul>

<h2>Build changes in version 2.11</h2>
<ul>
  <li>New CMake variables for packages that may be built either for serial or for parallel were introduced. These new variables have _MPIPAR appended just after the package moniker (e.g. HDF5_MPIPAR_DIR). When it is necessary to distinguish between serial and parallel installations of a package, the _MPIPAR variables are used to reference a parallel-enabled package's installation whereas the non_MPIPAR variables reference a serial installation. Otherwise, only the non_MPIPAR variables are used. And, depending on the build circumstances, the non_MPIPAR variables may refer to either a serial or a parallel package installation.</li>
  <li>Proliferant references to the ${ZLIB_LIB} variable in database plugins .xml files was removed. Only those plugins that actually directly call zlib library functions need it.</li>
  <li>build_visit was enhanced to build MOAB (Mesh Object datABase).</li>
  <li>build_visit was enhanced to build HDF5 for both serial and parallel installations if the following conditions are met...static build, parallel build, moab is being built.</li>
  <li>build_visit was enhanced to allow building of Qwt. To build Qwt, specify "-qwt" on the command line.</li>
</ul>

<h2>Changes for VisIt developers in version 2.11</h2>
<ul>
  <li>Support for separately linking to both a serial and a parallel installation of a TPL (HDF5 in this case) was developed. The relevant CMake variables are all those you would ordinarily have for any TPL except with the moniker _MPIPAR added just after the library moniker (e.g. for hdf5, we have HDF5 and HDF5_MPIPAR variables).</li>
  <li>Qwt is now a required third party library when building the graphical user interface. To build it with build_visit, specify "-qwt" on the command line.</li>
</ul>


<p>For any additional questions, send e-mail to <a href="mailto:visit-users@ornl.gov">VisIt Users</a>.</p>

</div>
</div>	
	  
	  ]]>
  </content>
</page>
