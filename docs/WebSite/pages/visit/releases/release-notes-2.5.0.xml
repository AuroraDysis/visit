<?xml version="1.0" encoding="UTF-8" ?>
<page>
  <title><![CDATA[Release Notes for VisIt 2.5]]></title>
  <owner><![CDATA[Page Owner Name]]></owner>
  <lastchanged><![CDATA[March 26, 2013]]></lastchanged>
  <template><![CDATA[l2]]></template> 
  <content>
    <![CDATA[
	
<link rel="stylesheet" href="content/css/mods.css" media="screen" />	

<div class="row">	
<div class="span9">

<ul class="nav nav-tabs">
  	<li><a href="simulation/computer-codes/visit">VisIt Home</a></li>
	<li class="active"><a href="simulation/computer-codes/visit/downloads">Downloads</a></li>
  	<li><a href="simulation/computer-codes/visit/new">What's New</a></li>
  	<li><a href="simulation/computer-codes/visit/screenshots">Screen Shots</a></li>
	<li><a href="simulation/computer-codes/visit/gallery">Gallery</a></li>
	<li><a href="simulation/computer-codes/visit/faqs">FAQs</a></li>
</ul>

<h2>General features added in version 2.5</h2>
<ul>
  <li>VisIt has been enhanced to better support double precision values, with many plots and operators capable of processing data in double precision from the time the data is read to the time it is displayed.</li>
  <li>The Windows version of VisIt has been enhanced so it can launch parallel compute engines on Windows HPC clusters. In order to launch VisIt's compute engine on a Windows HPC cluster, you must have Microsoft's HPC Client Utilities. You will also need to create a host profile for your cluster. The new host profile must contain the following:<br />
   <ul>
      <li>The name of the cluster's head node.</li>
      <li>The <i>Installation directory</i> where VisIt is located on the remote cluster.</li>
      <li>The <i>Share batch job with Metadata Server</i> option must be enabled.</li>
      <li>The <i>Parallel launch method</i> set to <i>WindowsHPC</i>.</li>
      <li>The default number of processors.</li>
    </ul><br />
    When you submit a job to the Windows HPC scheduler, VisIt will interact with the scheduler directly so there is no need to run ssh to get to the remote computer. The cluster's compute nodes must be able to connect back to your client computer over the network.
  </li>
  <li>VisIt has been enhanced so the metadata server and compute engine can once again share a single batch job. This option is available in the <i>Host Profiles</i> window.</li>
  <li>The Windows version of VisIt no longer opens console windows.</li>
  <li>VisIt has been enhanced so each variable on a mesh can have an associated <i>"missing data"</i> value. Missing data are used to exclude cells or nodes with the missing data values from the visualization. Expressions that combine variables with missing data restrict their outputs to only the cells or nodes that are valid for all of the expression's input variables.<p>Missing data are specified in the scalar metadata by a database reader plugin and can be described using 4 rules:
  </p><center><table class="table table-striped" border="1" cellpadding="3" cellspacing="0">
  <tr>
    <th>Missing data rule</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>Missing value</td>
    <td>All values matching the provided missing value are excluded.</td>
  </tr>
  <tr>
    <td>Valid min</td>
    <td>All values below the provided valid minimum value are excluded.</td>
  </tr>
  <tr>
    <td>Valid max</td>
    <td>All values above the provided valid maximum value are excluded.</td>
  </tr>
  <tr>
    <td>Valid range</td>
    <td>All values outside of the provided valid range are excluded.</td>
  </tr>
  </table></center>
  <p></p>
  </li>
  <li>Allen Harvey extended the Volume plot's splatting renderer so that it may directly render clouds of points without first resampling them to a regular grid. This change preserves details in point clouds without having to use a large number of sample points. Thanks Allen!</li>
  <li>The Volume plot's splatting renderer can now render single-block rectilinear datasets without first sampling to another grid size.</li>
  <li>Zooming using the mouse wheel now causes the view to be sent to the GUI.</li>
  <li>Zooming using the mouse wheel is now implemented for windows that display Curve plots.</li>
  <li>If you have loaded or saved a session file then the name of the session file will be displayed in the Main window's title.</li>
  <li>Support was added for launching engines using the combination of <i>sbatch/aprun</i>.</li>
  <li>VisIt is now installed with additional color tables derived from the set of <i>Brewer</i> color tables <i>(See the Copyright in the help for more information)</i>. This provides many more color tables from which to choose.</li>
    <li>VisIt's python module was modified to include packing of python scripts and resolve import namespace issues with the compiled module.
   This change requires new paths when using the module from your own python interperter. For more details see: <a href="http://visitusers.org/index.php?title=Python_Module_Support">Python Module Support</a></li>
   <li> A new set of python  utilities <b>visit_utils</b> is included with VisIt.
</li></ul>

<h2>Advanced features added in version 2.5</h2>
<ul>
  <li>Selections have been enhanced so they offer multiple ways to index cells in a mesh. For example, it is now possible to identify cells using their domain and local cell number, global cell number, or by a user-specified variable such as a particle ID. The domain and local cell number and global cell number indexing schemes are useful for domain-decomposed data whose mesh connectivity does not change. The variable indexing scheme is good for domain-decomposed data and situations where mesh connectivity changes across domains and time. You can specify the type of indexing to use when you create a new selection and you can alter the selection's properties in the Selections window.</li>
  <li>William T. Jones extended libsim so it supports ghost nodes. Thanks William!</li>
  <li>Libsim was enhanced to provide a function that lets you set the MPI communicator that VisIt should use. Pass an address to the communicator to <i>VisItSetMPICommunicator(void*)</i> if you want to make VisIt use a user-defined communicator. Passing NULL will make VisIt use its copy of the world communicator.</li>
  <li>The VisIt Python Interface now provides a function called <i>WriteScript</i> that tries to write the current state of VisIt as a Python program that can be executed later.</li>
</ul>

<h2>Changes in GUI behavior for version 2.5</h2>
<ul>
  <li>Color table buttons in the gui now show an icon depicting the colors in the color table.</li>
  <li>Color tables can now use cubic spline interpolation between colors to make smoother transitions than the default linear scheme. The default color tables remain linear but you can change the interpolation yourself.</li>
  <li>Added a Controls menu option to directly launch VisIt's command line interface (CLI), if an instance of the CLI is not already active.</li>
</ul>

<h2>File format reader changes in version 2.5</h2>
<ul>
  <li>Joel Welling contributed an MFIXCDF reader.</li>
  <li>Joel Welling contributed changes to the MFIX reader that change how it performs domain decomposition.</li>
  <li>The EnSight file format reader now supports materials.</li>
  <li>VisIt's NETCDF reader now supports conventions for missing data. The <i>missing_value, _FillValue, valid_min, valid_max, valid_range</i> attributes are supported.</li>
  <li>VisIt's NETCDF reader now supports the <i>scale_factor</i> and <i>add_offset</i> attributes, using them to transform packed char and short data into double-precision.</li>
  <li>The BOW reader was obsolete so it was removed.</li>
  <li>VisIt's Dyna3D reader can now read material models 10 and 15.</li>
  <li>Bob Corey updated the Mili reader.</li>
  <li>Bob Corey corrected a bug in makemili, where not all the variables present in the Mili file were made available for plotting.</li>
  <li>The paraDIS reader was fixed so it will read the entire dataset on Windows.</li>
  <li>The CGNS reader was fixed so that VisIt won't crash when reading a large number of grouped files.</li>
  <li>The Silo reader was enhanced to read gmap extensions which identify periodic boundary conditions and avoid ghosting of these boundaries.</li>
</ul>

<h2>Changes to VisIt's plots in version 2.5</h2>
<ul>
  <li>VisIt's Spreadsheet plot now supports missing data, marking them in the spreadsheet with a reddish gray background color.</li>
</ul>

<h2>Changes to VisIt's expression language in version 2.5</h2>
<ul>
  <li>The <b>cross</b> expression, which performs a cross product, now produces a scalar when crossing two dimensional vectors, as the magnitude of the direction out of the plane.</li>
  <li>The <b>value_for_materiral</b>, and <b>matvf</b> expressions now work properly with AMR datasets.</li>
</ul>

<h2>Changes to VisIt's picks and queries in version 2.5</h2>
<ul>
  <li>Scatter Plots can now be picked.</li>
</ul>

<h2>Other bugs fixed in version 2.5</h2>
<ul>
  <li>Named selections now correctly select the right cells when FastBit indexing is used.</li>
  <li>Libsim's routines for setting rectlinear and AMR domain boundary indices are now properly getting called in the simulation runtime library.</li>
  <li>The PersistentParticles operator no longer causes the compute engine to exit when it is applied to a Mesh plot.</li>
  <li>Stereo rendering now works properly. It was broken in versions of VisIt after the VTK upgrade in VisIt 2.4.0.</li>
  <li>Slicing and Contouring of data on unstructured meshes containing polyhedral cells no longer causes VisIt's compute engine to eventually crash.</li>
  <li>Enabling keyframing no longer crashes the viewer.</li>
</ul>
  
<h2>Changes to configuration files in version 2.5</h2>
<ul>
  <li>Host profiles for LLNL's CZ clusters have been changed to use <i>SSH tunneling</i> so Windows users should be able to run client/server without having to modify host profiles.</li>
  <li>Host profiles were added for LLNL's rzmerl cluster.</li>
  <li>Host profiles were added for LLNL's oslic cluster.</li>
  <li>Host profiles were added for LLNL's zin cluster.</li>
</ul>
  
<h2>Changes for VisIt developers in version 2.5</h2>
<ul>
  <li>Visual Studio 2010 support was added.</li>
</ul>

</div>
</div>	
	  
	  ]]>
  </content>
</page>
