<?xml version="1.0" encoding="UTF-8" ?>
<page>
  <title><![CDATA[Key Features of VisIt]]></title>
  <owner><![CDATA[Page Owner Name]]></owner>
  <lastchanged><![CDATA[July 2, 2014]]></lastchanged>
  <template><![CDATA[l2]]></template> 
  <content>
    <![CDATA[
	
<link rel="stylesheet" href="content/css/mods.css" media="screen" />	

<div class="row">	
<div class="span9">

<ul class="nav nav-tabs">
  	<li class="active"><a href="simulation/computer-codes/visit">VisIt Home</a></li>
	<li><a href="simulation/computer-codes/visit/downloads">Downloads</a></li>
  	<li><a href="simulation/computer-codes/visit/new">What's New</a></li>
  	<li><a href="simulation/computer-codes/visit/screenshots">Screen Shots</a></li>
	<li><a href="simulation/computer-codes/visit/gallery">Gallery</a></li>
	<li><a href="simulation/computer-codes/visit/faqs">FAQs</a></li>
</ul>

<p>The following table presents key features with descriptions of VisIt. A complete list of features is presented on a second table below.
<table class="table table-striped" border="0" cellpadding="3" cellspacing="1">
  <tbody>
    <tr valign="top">
      <th width="20%">Feature</th>
      <th width="80%">Description/Example</th>
    </tr>
    <tr valign="top">
      <td width="20%"><p> Has rich feature set for scalar, vector, and tensor field visualization</p></td>
      <td width="40%"><p>VisIt's visualization capabilities are primarily grouped into two categories: </p>
          <ul>
            <li><b><a href="screens.html">Plots</a></b> are used to visualize data and include boundary, contour, curve, label, mesh, pseudocolor, scatter, streamline, subset, surface, tensor, vector, and volume. See <a href="simulation/computer-codes/visit/screenshots">plotting screen shots</a>.</li>
            <li><b><a href="simulation/computer-codes/visit/screenshots2">Operators</a></b> consist of operations that can be performed on the data prior to visualization. Some examples include slice, index select, iso-surface, onion peel, reflect, threshold, and part selection. See <a href="simulation/computer-codes/visit/screenshots2">operator screen shots</a>.</li>
          </ul>
          <p> VisIt handles 2D and 3D data equally well. VisIt also has the ability to animate data, allowing users to see the time evolution of their data. A complete table of visualization features is presented below.</p></td>
    </tr>
    <tr valign="top">
      <td width="20%"><p>Provides qualitative and quantitative visualization and analysis</p></td>
      <td width="20%"><p>VisIt is also a powerful analysis tool. It provides support for derived fields, which allow new fields to be calculated using existing fields. For example, if a dataset contains a velocity field, it is possible to define a new field that is the velocity magnitude. VisIt's quantitative analysis tools include:</p>
          <ul>
            <li> <a href="simulation/computer-codes/visit/screenshots3">Line-out</a>, which allows you to create curves from higher dimensional datasets by interactively defining lines using the mouse. </li>
            <li><a href="screens3.html">Pick and query</a>, which allows you to query the dataset by clicking on images. </li>
          </ul>
          <p>VisIt also supports a generalized query interface, which allows you to query derived quantities such as volume or surface area. See <a href="simulation/computer-codes/visit/screenshots3">data exploration screen shots</a>.</p></td>
    </tr>
    <tr valign="top">
      <td width="20%" ><p>Supports multiple mesh types</p></td>
      <td width="20%" ><p>VisIt provides support for a wide range of computational meshes, including two- and three-dimensional point, rectilinear, curvilinear, and unstructured meshes. In addition, VisIt supports structured AMR meshes and CSG meshes. <b> </b>See screenshots of <a href="screens3.html">2D</a> and <a href="screens.html">3D</a> images produced by VisIt.</p></td>
    </tr>
    <tr valign="top">
      <td width="20%" ><p>Powerful, full-featured graphical user interface (GUI)</p></td>

      <td width="20%" ><p>VisIt's graphical user interface (see <a href="simulation/computer-codes/visit/screenshots4">screen shots</a>) allows novice users to quickly get started visualizing their data, as well as allowing power users access to advanced features. VisIt automatically creates time-based animations from data sets that contain multiple time steps. In addition, it also has a keyframe animation capability that allows users to create sophisticated animations. VisIt's on-line help system contains a hyperlinked version of the <a href="#">User&#146;s Manual</a>. VisIt allows users to pan, zoom, and rotate objects interactively using the mouse. It also gives users the ability to interactively size and position geometric objects such as planes and spheres.</p></td>
    </tr>
    <tr valign="top">
      <td ><p>Parallel and distributed architecture for extreme scale visualization</p></td>
      <td ><p>VisIt employs a distributed and parallel architecture in order to handle extremely large data sets interactively. VisIt's rendering and data processing capabilities are split into viewer and engine components that may be distributed across multiple machines:</p>
          <ul>
            <li>Viewer&#8212;Responsible for rendering and is typically run on a local desktop or visualization server so that it can leverage the extremely powerful graphics cards that have been developed in the last few years. </li>
            <li>Engine&#8212;Responsible for the bulk of the data processing and input/output (I/O) <b> </b>and is typically run on a remote machine where the data is located. This eliminates the need move the data and makes high-end compute and I/O resources available to it. The engine can be run serially on a single processor or in parallel on thousands of processors.</li>
        </ul></td>
    </tr>
    <tr valign="top">
      <td ><p>Interfaces with C++, Python, and Java</p></td>
      <td ><p>VisIt also supports C++, Python and Java interfaces. The C++ and Java interfaces make it possible to provide alternate user interfaces for VisIt or allow existing C++ or Java applications to add visualization support. The Python scripting interface gives users the ability to batch process data using a powerful scripting language. This feature can be used to create extremely sophisticated animations or implement regression suites. It also allows simulation systems that use Python as a back-plane to easily integrate visualization capabilities into their systems. </p></td>
    </tr>
    <tr valign="top">
      <td ><p>Extensible with dynamically loaded plug-ins</p></td>
      <td ><p>VisIt achieves extensibility through the use of dynamically loaded plugins. All of VisIt's plots, operators, and database readers are implemented as plugins and are loaded at run-time from the plugin directory. New plugins can be added simply by installing them in this directory. VisIt comes with a graphical plugin creation tool, which greatly simplifies the process of creating new plugins. The user describes the properties of the plugin and then the tool generates most of the code necessary to implement the plugin. For example, in the case of an operator, the plugin creation tool creates the code necessary for the graphical user interface attribute window; the C++, Python, and Java interfaces; and the code necessary to interface to VisIt. The only code you need to write is the C++ code that actually performs the operation.</p></td>
    </tr>
    <tr valign="top">
      <td ><p>Multi-platform support</p></td>
      <td ><p>VisIt operates on UNIX (Irix, Tru64, AIX, Linux, Solaris), MacOS X (10.3, 10.4), and Windows platforms. Software for these platforms can be <a href="simulation/computer-codes/visit/downloads">downloaded</a>.</p></td>
    </tr>
    <tr valign="top">
      <td ><p>Open Source </p></td>
      <td ><p>VisIt's source code is open source and freely available under the <a href="simulation/computer-codes/visit/license" title="VisIt BSD license" target="_blank">BSD license</a>, allowing programmers to read, redistribute, and modify the source code. </p></td>
    </tr>
    <tr valign="top">
      <td ><p>Customer support </p></td>
      <td ><p>The <a href="mailto:visit-users@ornl.gov">visit-users@ornl.gov</a> mailing list offers responsive customer support. For users associated with SciDAC, GNEP or ASC, e-mail support is available from <a href="mailto:visit-help-scidac@ornl.gov">visit-help-scidac@ornl.gov</a>, <a href="mailto:visit-help-gnep@ornl.gov">visit-help-gnep@ornl.gov</a>, and <a href="mailto:visit-help-asc@ornl.gov">visit-help-asc@ornl.gov</a>. For ASC and GNEP VisIt users, a customer support phone line is available. Dial <strong>42-VIS</strong> to talk to a VisIt developer Monday through Friday 8-12, 1-5 Pacific Time.</p></td>
    </tr>
  </tbody>
</table>

<h2>Complete List of VisIt Features</h2>
<table class="table table-striped"  border="0" cellpadding="3" cellspacing="1">
  <tr> 
    <th width="30%">Plots</font></th>
    <th width="40%">Operators</font></th>
    <th width="30%">General</font></th>
  </tr>
  <tr> 
    <td>Contour</td>
    <td>Slices (cone, plane, sphere)</td>
    <td>Parallel versions available </td>
  </tr>
  <tr> 
    <td>Mesh</td>
    <td>Index Select</td>
    <td>Animation</td>
  </tr>
  <tr> 
    <td>Vector</td>
    <td>Iso-surface</td>
    <td>Movie-making</td>
  </tr>
  <tr> 
    <td>Subset</td>
    <td>Onion Peel</td>
    <td>Direct manipulation tools</td>
  </tr>
  <tr> 
    <td>Pseudocolor</td>
    <td>Reflect</td>
    <td>Pick &amp; Query</td>
  </tr>
  <tr> 
    <td>Surface</td>
    <td>Threshold</td>
    <td>Line-out</td>
  </tr>
  <tr> 
    <td>Curve</td>
    <td>Transform</td>
    <td>Status bars</td>
  </tr>
  <tr> 
    <td>Volume</td>
    <td>Replicate</td>
    <td>Interruptable</td>
  </tr>
  <tr> 
    <td>Scatter</td>
    <td>Resample</td>
    <td>Remote data access</td>
  </tr>
    <tr> 
    <td>Spreadsheet</td>
    <td>Revolve</td>
    <td>Fault tolerant</td>
  </tr>
  <tr> 
    <td>Molecule</td>
    <td>Elevate</td>
    <td>Scalable rendering </td>
  </tr>
  <tr> 
    <td>Parallel Axis </td>
    <td>Project</td>
    <td>Online help</td>
  </tr>
  <tr> 
    <td>Histogram</td>
    <td>Displace</td>
    <td>Read data directly from simulation memory* </td>
  </tr>
  <tr> 
    <td>Label</td>
    <td>Subset restriction</td>
    <td>Material interface reconstruction</td>
  </tr>
   <tr> 
    <td>Truecolor</td>
    <td>Expressions</td>
    <td>Reads over 60 different file formats </td>
  </tr>
  <tr> 
    <td>Tensor</td>
    <td>&nbsp;</td>
    <td>Scriptable</td>
  </tr> 
</table>

<p>* When VisIt's libsim has been used to instrument the simulation. </p>

</div>
</div>	
	  
	  ]]>
  </content>
</page>
